{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\"use strict\";\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */ class $a5fd07fa01589658$var$Game {\n    /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */ constructor(initialState){\n        this.initialState = initialState;\n        // eslint-disable-next-line no-console\n        // console.log(initialState);\n        this.table = document.querySelector(\".game-field\");\n        this.items = this.table.querySelectorAll(\".field-cell\");\n        this.score = document.querySelector(\".game-score\");\n        this.loseM = document.querySelector(\".message-lose\");\n        this.startM = document.querySelector(\".message-start\");\n        this.winM = document.querySelector(\".message-win\");\n        this.sum = 0;\n    }\n    numToAdd() {\n        const newNum = Math.ceil(Math.random() * 10);\n        if (newNum === 1) return 4;\n        else return 2;\n    }\n    addNum() {\n        let zeros = 0;\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.initialState[i][j] === 0) zeros++;\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (this.initialState[i][j] === 0) {\n                if (Math.ceil(Math.random() * zeros) === 1) {\n                    this.initialState[i][j] = this.numToAdd();\n                    this.setNums();\n                    this.getScore();\n                    return;\n                }\n                zeros--;\n            }\n        }\n    }\n    start() {\n        this.addNum();\n        this.addNum();\n        this.startM.classList.add(\"hidden\");\n    }\n    setNums() {\n        let currentList = 0;\n        let currentItem = 0;\n        for(let i = 0; i < 16; i++){\n            this.items[i].textContent = this.initialState[currentList][currentItem];\n            currentItem++;\n            if (this.items[i].textContent === \"0\") this.items[i].textContent = \"\";\n            if (this.items[i].textContent === \"2048\") {\n                this.startM.classList.add(\"hidden\");\n                this.winM.classList.remove(\"hidden\");\n            }\n            if (this.items[i].classList.length === 2) {\n                this.items[i].classList.remove(this.items[i].classList[1]);\n                this.items[i].classList.add(`field-cell--${this.items[i].textContent}`);\n            } else this.items[i].classList.add(`field-cell--${this.items[i].textContent}`);\n            if (currentItem === 4) {\n                currentList++;\n                currentItem = 0;\n            }\n        }\n    }\n    moveLeft() {\n        const arr = [\n            [\n                ...this.initialState[0]\n            ],\n            [\n                ...this.initialState[1]\n            ],\n            [\n                ...this.initialState[2]\n            ],\n            [\n                ...this.initialState[3]\n            ]\n        ];\n        for(let j = 0; j < 4; j++){\n            const currentArray = this.initialState[j];\n            for(let i = 3; i >= 0; i--)if (currentArray[i] === 0) currentArray.splice(i, 1);\n            for(let i = 0; i < 4; i++)if (currentArray[i] === undefined) currentArray.push(0);\n            for(let i = 0; i < 4; i++)if (currentArray[i] === currentArray[i + 1]) {\n                currentArray[i] *= 2;\n                this.sum += currentArray[i];\n                currentArray.splice(i + 1, 1);\n                currentArray.push(0);\n            }\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (arr[i][j] !== this.initialState[i][j]) {\n                this.addNum();\n                return;\n            }\n        }\n    }\n    moveRight() {\n        const arr = [\n            [\n                ...this.initialState[0]\n            ],\n            [\n                ...this.initialState[1]\n            ],\n            [\n                ...this.initialState[2]\n            ],\n            [\n                ...this.initialState[3]\n            ]\n        ];\n        for(let j = 0; j < 4; j++){\n            const currentArray = this.initialState[j];\n            for(let i = 3; i >= 0; i--)if (currentArray[i] === 0) currentArray.splice(i, 1);\n            for(let i = 0; i < 4; i++)if (currentArray[i] === undefined) currentArray.unshift(0);\n            for(let i = 3; i >= 0; i--)if (currentArray[i] === currentArray[i - 1]) {\n                currentArray[i] *= 2;\n                this.sum += currentArray[i];\n                currentArray.splice(i - 1, 1);\n                currentArray.unshift(0);\n            }\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (arr[i][j] !== this.initialState[i][j]) {\n                this.addNum();\n                return;\n            }\n        }\n    }\n    moveUp() {\n        const arr = [\n            [\n                ...this.initialState[0]\n            ],\n            [\n                ...this.initialState[1]\n            ],\n            [\n                ...this.initialState[2]\n            ],\n            [\n                ...this.initialState[3]\n            ]\n        ];\n        for(let j = 0; j < 4; j++){\n            const subArr = [];\n            for(let i = 0; i < 4; i++)subArr.push(this.initialState[i][j]);\n            const filtred = subArr.filter((item)=>item !== 0);\n            while(filtred.length < 4)filtred.push(0);\n            for(let i = 0; i < 4; i++)if (filtred[i] === filtred[i + 1]) {\n                filtred[i] *= 2;\n                this.sum += filtred[i];\n                filtred.splice(i + 1, 1);\n                filtred.push(0);\n            }\n            for(let i = 0; i < 4; i++)this.initialState[i][j] = filtred[i];\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (arr[i][j] !== this.initialState[i][j]) {\n                this.addNum();\n                return;\n            }\n        }\n    }\n    moveDown() {\n        const arr = [\n            [\n                ...this.initialState[0]\n            ],\n            [\n                ...this.initialState[1]\n            ],\n            [\n                ...this.initialState[2]\n            ],\n            [\n                ...this.initialState[3]\n            ]\n        ];\n        for(let j = 0; j < 4; j++){\n            const subArr = [];\n            for(let i = 0; i < 4; i++)subArr.push(this.initialState[i][j]);\n            const filtred = subArr.filter((item)=>item !== 0);\n            while(filtred.length < 4)filtred.unshift(0);\n            for(let i = 3; i >= 0; i--)if (filtred[i] === filtred[i - 1]) {\n                filtred[i] *= 2;\n                this.sum += filtred[i];\n                filtred.splice(i - 1, 1);\n                filtred.unshift(0);\n            }\n            for(let i = 0; i < 4; i++)this.initialState[i][j] = filtred[i];\n        }\n        for(let i = 0; i < 4; i++){\n            for(let j = 0; j < 4; j++)if (arr[i][j] !== this.initialState[i][j]) {\n                this.addNum();\n                return;\n            }\n        }\n    }\n    /**\n   * @returns {number}\n   */ getScore() {\n        this.score.textContent = this.sum;\n    }\n    /**\n   * @returns {number[][]}\n   */ getState() {}\n    /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ getStatus() {\n        for(let i = 0; i < 4; i++){\n            if (this.initialState[i].includes(0)) return;\n            for(let j = 0; j < 3; j++){\n                if (this.initialState[i][j] === this.initialState[i][j + 1]) return;\n            }\n        }\n        for(let i = 0; i < 3; i++)for(let j = 0; j < 4; j++){\n            if (this.initialState[i][j] === this.initialState[i + 1][j]) return;\n        }\n        this.loseM.classList.remove(\"hidden\");\n        this.startM.classList.add(\"hidden\");\n    }\n    /**\n   * Resets the game.\n   */ restart() {\n        for (const arrays of this.initialState)for(let i = 0; i < 4; i++)arrays[i] = 0;\n        if (this.loseM.classList.contains(\"hidden\") === false) {\n            this.loseM.classList.add(\"hidden\");\n            this.startM.classList.remove(\"hidden\");\n        }\n        if (this.winM.classList.contains(\"hidden\") === false) {\n            this.winM.classList.add(\"hidden\");\n            this.startM.classList.remove(\"hidden\");\n        }\n        this.sum = 0;\n        this.start();\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$arr = [\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ],\n    [\n        0,\n        0,\n        0,\n        0\n    ]\n];\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports($09e991522ca7e64e$var$arr);\n// Write your code here\nconst $09e991522ca7e64e$var$button = document.querySelector(\".button\");\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$button.textContent !== \"Restart\") {\n        $09e991522ca7e64e$var$button.classList.remove(\"start\");\n        $09e991522ca7e64e$var$button.classList.add(\"restart\");\n        $09e991522ca7e64e$var$button.innerHTML = \"Restart\";\n    }\n    if ($09e991522ca7e64e$var$button.textContent === \"Restart\") $09e991522ca7e64e$var$game.restart();\n});\ndocument.addEventListener(\"keydown\", ()=>{\n    const key = event.key;\n    if (key === \"ArrowUp\") {\n        $09e991522ca7e64e$var$game.moveUp();\n        $09e991522ca7e64e$var$game.getStatus();\n    }\n    if (key === \"ArrowDown\") {\n        $09e991522ca7e64e$var$game.moveDown();\n        $09e991522ca7e64e$var$game.getStatus();\n    }\n    if (key === \"ArrowRight\") {\n        $09e991522ca7e64e$var$game.moveRight();\n        $09e991522ca7e64e$var$game.getStatus();\n    }\n    if (key === \"ArrowLeft\") {\n        $09e991522ca7e64e$var$game.moveLeft();\n        $09e991522ca7e64e$var$game.getStatus();\n    }\n});\n\n\n//# sourceMappingURL=index.7a1c07b3.js.map\n","'use strict';\n\n// Uncomment the next lines to use your game instance in the browser\nconst Game = require('../modules/Game.class');\nconst arr = [[0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0]];\nconst game = new Game(arr);\n\n// Write your code here\n\nconst button = document.querySelector('.button');\n\nbutton.addEventListener('click', () => {\n  if (button.textContent !== 'Restart') {\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.innerHTML = 'Restart';\n  };\n\n  if (button.textContent === 'Restart') {\n    game.restart();\n  }\n});\n\ndocument.addEventListener('keydown', () => {\n  const key = event.key;\n\n  if (key === 'ArrowUp') {\n    game.moveUp();\n    game.getStatus();\n  }\n\n  if (key === 'ArrowDown') {\n    game.moveDown();\n    game.getStatus();\n  }\n\n  if (key === 'ArrowRight') {\n    game.moveRight();\n    game.getStatus();\n  }\n\n  if (key === 'ArrowLeft') {\n    game.moveLeft();\n    game.getStatus();\n  }\n});\n","'use strict';\n\n/**\n * This class represents the game.\n * Now it has a basic structure, that is needed for testing.\n * Feel free to add more props and methods if needed.\n */\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState) {\n    this.initialState = initialState;\n    // eslint-disable-next-line no-console\n    // console.log(initialState);\n    this.table = document.querySelector('.game-field');\n    this.items = this.table.querySelectorAll('.field-cell');\n    this.score = document.querySelector('.game-score');\n    this.loseM = document.querySelector('.message-lose');\n    this.startM = document.querySelector('.message-start');\n    this.winM = document.querySelector('.message-win');\n    this.sum = 0;\n  }\n\n  numToAdd() {\n    const newNum = Math.ceil(Math.random() * 10);\n\n    if (newNum === 1) {\n      return 4;\n    } else {\n      return 2;\n    }\n  }\n\n  addNum() {\n    let zeros = 0;\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.initialState[i][j] === 0) {\n          zeros++;\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.initialState[i][j] === 0) {\n          if (Math.ceil(Math.random() * zeros) === 1) {\n            this.initialState[i][j] = this.numToAdd();\n\n            this.setNums();\n            this.getScore();\n\n            return;\n          }\n\n          zeros--;\n        }\n      }\n    }\n  }\n\n  start() {\n    this.addNum();\n    this.addNum();\n    this.startM.classList.add('hidden');\n  }\n\n  setNums() {\n    let currentList = 0;\n    let currentItem = 0;\n\n    for (let i = 0; i < 16; i++) {\n      this.items[i].textContent = this.initialState[currentList][currentItem];\n      currentItem++;\n\n      if (this.items[i].textContent === '0') {\n        this.items[i].textContent = '';\n      }\n\n      if (this.items[i].textContent === '2048') {\n        this.startM.classList.add('hidden');\n        this.winM.classList.remove('hidden');\n      }\n\n      if (this.items[i].classList.length === 2) {\n        this.items[i].classList.remove(this.items[i].classList[1]);\n        this.items[i].classList.add(`field-cell--${this.items[i].textContent}`);\n      } else {\n        this.items[i].classList.add(`field-cell--${this.items[i].textContent}`);\n      }\n\n      if (currentItem === 4) {\n        currentList++;\n        currentItem = 0;\n      }\n    }\n  }\n\n  moveLeft() {\n    const arr = [[...this.initialState[0]],\n      [...this.initialState[1]],\n      [...this.initialState[2]],\n      [...this.initialState[3]]];\n\n    for (let j = 0; j < 4; j++) {\n      const currentArray = this.initialState[j];\n\n      for (let i = 3; i >= 0; i--) {\n        if (currentArray[i] === 0) {\n          currentArray.splice(i, 1);\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        if (currentArray[i] === undefined) {\n          currentArray.push(0);\n        };\n      }\n\n      for (let i = 0; i < 4; i++) {\n        if (currentArray[i] === currentArray[i + 1]) {\n          currentArray[i] *= 2;\n          this.sum += currentArray[i];\n          currentArray.splice(i + 1, 1);\n          currentArray.push(0);\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (arr[i][j] !== this.initialState[i][j]) {\n          this.addNum();\n\n          return;\n        }\n      }\n    }\n  }\n\n  moveRight() {\n    const arr = [[...this.initialState[0]],\n      [...this.initialState[1]],\n      [...this.initialState[2]],\n      [...this.initialState[3]]];\n\n    for (let j = 0; j < 4; j++) {\n      const currentArray = this.initialState[j];\n\n      for (let i = 3; i >= 0; i--) {\n        if (currentArray[i] === 0) {\n          currentArray.splice(i, 1);\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        if (currentArray[i] === undefined) {\n          currentArray.unshift(0);\n        }\n      }\n\n      for (let i = 3; i >= 0; i--) {\n        if (currentArray[i] === currentArray[i - 1]) {\n          currentArray[i] *= 2;\n          this.sum += currentArray[i];\n          currentArray.splice(i - 1, 1);\n          currentArray.unshift(0);\n        }\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (arr[i][j] !== this.initialState[i][j]) {\n          this.addNum();\n\n          return;\n        }\n      }\n    }\n  }\n\n  moveUp() {\n    const arr = [[...this.initialState[0]],\n      [...this.initialState[1]],\n      [...this.initialState[2]],\n      [...this.initialState[3]]];\n\n    for (let j = 0; j < 4; j++) {\n      const subArr = [];\n\n      for (let i = 0; i < 4; i++) {\n        subArr.push(this.initialState[i][j]);\n      }\n\n      const filtred = subArr.filter((item) => item !== 0);\n\n      while (filtred.length < 4) {\n        filtred.push(0);\n      }\n\n      for (let i = 0; i < 4; i++) {\n        if (filtred[i] === filtred[i + 1]) {\n          filtred[i] *= 2;\n          this.sum += filtred[i];\n          filtred.splice(i + 1, 1);\n          filtred.push(0);\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        this.initialState[i][j] = filtred[i];\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (arr[i][j] !== this.initialState[i][j]) {\n          this.addNum();\n\n          return;\n        }\n      }\n    }\n  }\n\n  moveDown() {\n    const arr = [[...this.initialState[0]],\n      [...this.initialState[1]],\n      [...this.initialState[2]],\n      [...this.initialState[3]]];\n\n    for (let j = 0; j < 4; j++) {\n      const subArr = [];\n\n      for (let i = 0; i < 4; i++) {\n        subArr.push(this.initialState[i][j]);\n      }\n\n      const filtred = subArr.filter((item) => item !== 0);\n\n      while (filtred.length < 4) {\n        filtred.unshift(0);\n      }\n\n      for (let i = 3; i >= 0; i--) {\n        if (filtred[i] === filtred[i - 1]) {\n          filtred[i] *= 2;\n          this.sum += filtred[i];\n          filtred.splice(i - 1, 1);\n          filtred.unshift(0);\n        }\n      }\n\n      for (let i = 0; i < 4; i++) {\n        this.initialState[i][j] = filtred[i];\n      }\n    }\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (arr[i][j] !== this.initialState[i][j]) {\n          this.addNum();\n\n          return;\n        }\n      }\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    this.score.textContent = this.sum;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() { }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    for (let i = 0; i < 4; i++) {\n      if (this.initialState[i].includes(0)) {\n        return;\n      }\n\n      for (let j = 0; j < 3; j++) {\n        if (this.initialState[i][j] === this.initialState[i][j + 1]) {\n          return;\n        }\n      }\n    }\n\n    for (let i = 0; i < 3; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.initialState[i][j] === this.initialState[i + 1][j]) {\n          return;\n        }\n      }\n    }\n    this.loseM.classList.remove('hidden');\n    this.startM.classList.add('hidden');\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    for (const arrays of this.initialState) {\n      for (let i = 0; i < 4; i++) {\n        arrays[i] = 0;\n      }\n    }\n\n    if (this.loseM.classList.contains('hidden') === false) {\n      this.loseM.classList.add('hidden');\n      this.startM.classList.remove('hidden');\n    }\n\n    if (this.winM.classList.contains('hidden') === false) {\n      this.winM.classList.add('hidden');\n      this.startM.classList.remove('hidden');\n    }\n\n    this.sum = 0;\n    this.start();\n  }\n\n  // Add your own methods here\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","$09e991522ca7e64e$var$game","constructor","initialState","table","document","querySelector","items","querySelectorAll","score","loseM","startM","winM","sum","numToAdd","newNum","Math","ceil","random","addNum","zeros","i","j","setNums","getScore","start","classList","add","currentList","currentItem","textContent","remove","length","moveLeft","arr","currentArray","splice","undefined","push","moveRight","unshift","moveUp","subArr","filtred","filter","item","moveDown","getState","getStatus","includes","restart","arrays","contains","$09e991522ca7e64e$var$button","addEventListener","innerHTML","key","event"],"version":3,"file":"index.7a1c07b3.js.map"}